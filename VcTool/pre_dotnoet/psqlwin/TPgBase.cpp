//=====================================================================================================================
//
//	FileName	:TPgBase.CPP
//	Class		:TPgBase
//				: postgresのDB基本操作クラス
//	作成日		:2002.05.07	Coded by Coba
//
//=====================================================================================================================
//	修正
//=====================================================================================================================
#include "tpgbase.h"

//---------------------------------------------------------------------------------------------------------------------
//	TPgBase::TPgBase()
//	タイプ：public
//	機能　：デフォルトコンストラクタ。メンバ変数の初期化
//	引数１：なし
//---------------------------------------------------------------------------------------------------------------------
TPgBase::TPgBase()
{
	m_pgConn = NULL;
}

//---------------------------------------------------------------------------------------------------------------------
//	TPgBase::~TPgBase()
//	タイプ：public
//	機能　：デストラクタ。オブジェクトやメモリの解放
//	引数１：なし
//---------------------------------------------------------------------------------------------------------------------
TPgBase::~TPgBase()
{
	if( m_pgConn !=NULL ) PS_DisConnect( m_pgConn);
}

//---------------------------------------------------------------------------------------------------------------------
//	BOOL TPgBase::Connect(void)
//	タイプ：public
//	機能　：データベースに接続
//	引数１：なし
//---------------------------------------------------------------------------------------------------------------------
int TPgBase::OpenConnect(char* host,char* db,char* user,char* pass)
{
	if( NULL==host || NULL==db || NULL==user || NULL == pass ) return(-1);
	char con_str[256];

	// DB接続文字列の作成
	sprintf( con_str,"hostaddr=%s dbname=%s user=%s password=%s",host,db,user,pass);
	// DBオープン

	if(PS_Connect(&m_pgConn, con_str)){
		return(-2);
	}

	return(0);
}

//---------------------------------------------------------------------------------------------------------------------
//	int TPgBase::Commit(int mode)
//	タイプ：public
//	機能　：トランザクションのコミット
//	引数１：コミットモード
//			PGCMT_START(0),		開始
//			PGCMT_COMMIT(1),		終了
//			PGCMT_ROLLBACK(2),	ロールバック
//---------------------------------------------------------------------------------------------------------------------
int TPgBase::Commit(int mode)
{
	if( mode < PGCMT_START || mode > PGCMT_ROLLBACK ) return(-1);

	int ret;
	char buf[40];

	switch(mode){
		case PGCMT_START:
			sprintf(buf,"begin");
			break;

		case PGCMT_COMMIT:
			sprintf(buf,"commit");
			break;

		case PGCMT_ROLLBACK:
			sprintf(buf,"rollback");
			break;
		default:return(-1);
	}

	// DBの接続を確認
	ret=this->ChkConnect();
	if( ret ) return(ret);
	ret=PS_Exec(m_pgConn,buf);
	return(ret);
}

//---------------------------------------------------------------------------------------------------------------------
//	int TPgTable::ChkConnect(void)
//	タイプ：protected
//	機能　：DB接続状況を調べ、切れていたら再接続する
//	戻り値：0=成功 
//			-100=接続が無効 
//			-101 再接続に失敗
//---------------------------------------------------------------------------------------------------------------------
int TPgBase::ChkConnect(void)
{
	if(m_pgConn == NULL) return(-100);

	// DBの接続を確認
	if( PS_IsConnect( m_pgConn) ){
		if( PS_ReConnect(&m_pgConn)) return(-101);
	}
	return(0);
}

